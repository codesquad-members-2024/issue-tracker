name: client
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-24.04 #배포 실행될 환경
    steps: #각 단계의 이름과 실행내용을 나열해서 작성한다.
      - name: Checkout source code. # Repo checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node modules # 빌드시 캐시 설정
        uses: actions/cache@v4
        with:
          path: ./fe/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm install
        working-directory: ./fe #디렉토리명

      - name: Build # 빌드 및 환경변수 설정
        run: npm run build
        working-directory: ./fe
        env:
          REACT_APP_EC2_SERVER: ${{ secrets.REACT_APP_EC2_SERVER }}

      - name: Configure AWS Credentials # CLI aws configure 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.S3_REGION }}

      - name: SHOW AWS CLI VERSION # S3에 배포, CLI
        env:
          AWS_EC2_METADATA_DISABLED: true
        run: |
          aws s3 sync \
            build s3://codesquad-2024-team8-issue-tracker \
            --delete
        working-directory: ./fe

      - name: Invalidate CloudFront Cache # 클라우드 프론트 무효화 캐시 무효 설정
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
