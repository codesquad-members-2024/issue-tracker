name: frontend deployment

on:
  push:
    branches: [ "fe-dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code.
        uses: actions/checkout@v3

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ./frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.OS }}-

      - name: Install Dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build
        run: CI=false npm run build
        working-directory: ./frontend
        env:
          REACT_APP_SERVER: ${{ secrets.REACT_APP_SERVER }}
          REACT_APP_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          REACT_APP_REGION: ${{ secrets.S3_REGION }}
          REACT_APP_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          REACT_APP_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          REACT_APP_IMG_DIRECTORY: ${{ secrets.S3_IMG_DIRECTORY }}
          REACT_APP_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          REACT_APP_REDIRECT_URI: ${{ secrets.OAUTH_REDIRECT_URI }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.S3_REGION }}

      - name: Deploy to S3
        run: aws s3 sync ./frontend/build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete --exclude "public/*"

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{secrets.CLOUDFRONT_DISTRIBUTION_ID}} --paths "/*"